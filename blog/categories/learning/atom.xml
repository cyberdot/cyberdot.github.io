<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Learning | Cyberdot]]></title>
  <link href="http://cyberdot.co.uk/blog/categories/learning/atom.xml" rel="self"/>
  <link href="http://cyberdot.co.uk/"/>
  <updated>2015-01-29T01:39:18+00:00</updated>
  <id>http://cyberdot.co.uk/</id>
  <author>
    <name><![CDATA[cyberdot]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Applying Effective Learning Techniques When Studying a New Programming Language]]></title>
    <link href="http://cyberdot.co.uk/blog/archives/2015/01/28/how-to-learn-new-programming-language/"/>
    <updated>2015-01-28T20:55:09+00:00</updated>
    <id>http://cyberdot.co.uk/blog/archives/2015/01/28/how-to-learn-new-programming-language</id>
    <content type="html"><![CDATA[<p>How do you learn new programming language quickly and efficiently, without
wasting too much time?
How do you ensure that what you&rsquo;ve just learned is retained in your memory
and you can effortlessly recall and use your knowledge in a week, a month, a year?
How do you keep up with new libraries, solutions and frameworks within the ecosystem
of the programming language?</p>

<p>These were the questions I always asked myself when I was trying to learn
a new programming language or a new programming framework. Things were painful for me,
I seemed to spend a lot of time learning but as soon as I moved onto the next concept,
I would realise that I am not able to recall or apply things that I have learned just a short time ago.</p>

<p>Taking <a href="https://www.coursera.org/course/learning">&ldquo;Learning How To Learn&rdquo; course</a> and
reading <a href="http://www.amazon.com/Mind-Numbers-Science-Flunked-Algebra/dp/039916524X/ref=sr_1_1?ie=UTF8&amp;qid=1422493112&amp;sr=8-1&amp;keywords=a+mind+for+numbers">&ldquo;A Mind For Numbers: How to Excel at Math and Science (Even If You Flunked Algebra)&rdquo;</a>
book by Barbara Oakley helped me realise how ineffective my learning techniques were and how to make
my learning process more effective.</p>

<p>Let&rsquo;s looks at some of the more important techniques to learn effectively:</p>

<ul>
<li>Dealing with procrastination</li>
<li>Focused and diffuse mode of thinking and how it&rsquo;s useful for learning new programming
language</li>
<li>Deliberate practice and the right way to do it</li>
<li>Illusions of learning and testing yourself</li>
<li>Right mindset and sleep</li>
</ul>


<p><strong>Dealing with procrastination</strong></p>

<p>My biggest issue when learning a new programming language was inability to force
myself to do it regularly. There&rsquo;s always something or other to attend to or I might
not be simply in the mood and as a result I&rsquo;d cram as much learning material as possible
in the hopes that it will stay there. It&rsquo;s always difficult to start learning at the beginning,
as the amount of the material to be covered seems to be daunting.</p>

<p>As discussed in the <a href="http://www.amazon.com/Mind-Numbers-Science-Flunked-Algebra/dp/039916524X/ref=sr_1_1?ie=UTF8&amp;qid=1422493112&amp;sr=8-1&amp;keywords=a+mind+for+numbers">&ldquo;A Mind For Numbers&rdquo; book</a>,
the way to beat procrastination is to start planning your learning activities the day before.
Chunk your learning material so that it can be worked on for short periods at a time.
Start with the most difficult concepts first as the brain is still fresh in the morning.
Use <a href="http://pomodorotechnique.com/">&ldquo;pomodoro&rdquo; technique</a>, which allows you to focus on a task for a short period of time.
When doing a &ldquo;pomodoro&rdquo; make sure there are no distractions, concentrate on your learning
material completely. After &ldquo;pomodoro&rdquo; is finished, relax for a while and reward yourself
to enforce the habit.</p>

<p>At the end of the &ldquo;pomodoro&rdquo; session try to recall the material that has just been learnt.
Doing learning in this way will ensure that spaced repetition is used and the solid
neuro structures in your brain are built.</p>

<p>Another good habit is to plan your quitting time so that there is a chance for you to
have change of activity and use the diffuse mode of thinking. As this mode of studying becomes the routine,
it becomes much easier to beat procrastination.</p>

<p><strong>Focused and diffuse mode of thinking</strong></p>

<p>Focused mode of thinking is when you are concentrating intently trying to learn or understand something.
It is good when trying to learn some simple concept or trying to solve a problem you have prior experience
or knowledge of solving. Focused mode is essential for studying a programming language.
<blockquote><p>&ldquo;It involves a direct approach to solving problems using rational, sequential, analytical approaches.&rdquo;</p><footer><strong>Oakley Barbara</strong> <cite>&ldquo;A Mind for Numbers: How to Excel at Math and Science&rdquo;</cite></footer></blockquote>
In the diffuse mode of thinking you normally look at the bigger picture when solving a problem. You don&rsquo;t normally focus intently on solving the problem, instead you let you thoughts flow freely, keeping the problem
at the back of your head. <blockquote><p>&ldquo;Diffuse mode insights often flow from preliminary thinking that&rsquo;s been done in the focused mode.&rdquo;</p><footer><strong>Oakley Barbara</strong> <cite>&ldquo;A Mind for Numbers: How to Excel at Math and Science&rdquo;</cite></footer></blockquote>
It seems that it&rsquo;s not possible to use both modes of thinking at the same time.
You can be either in focused mode or in diffuse mode.</p>

<p>To learn effectively your mind needs to constantly go between focused and diffuse mode. The best way to
switch to diffuse mode is to start on another activity (like jogging or playing a video game). It has to
be something that doesn&rsquo;t force you to use focused mode.</p>

<p><strong>Deliberate practice and how to do it right.</strong></p>

<p>In his well known essay <a href="http://norvig.com/21-days.html">&ldquo;Teach Yourself Programming in Ten Years&rdquo;</a>, Peter Norvig argues
that to become an expert in something, one has to spend 10,000 hours or ten years of purposeful learning.</p>

<p><blockquote><p>&ldquo;The key is deliberative practice: not just doing it again and again,<br/>but challenging yourself with a task that is just beyond your current ability, trying it, analyzing your performance while and after doing it, and correcting any mistakes. Then repeat. And repeat again.&rdquo;</p><footer><strong>Norvig</strong> <cite>Peter <a href="http://norvig.com/21-days.html">http://norvig.com/21-days.html</a> Teach Yourself Programming in 10 Years.</cite></footer></blockquote></p>

<p>Deliberate practice (not just plain repetition) helps enhance and strengthen neural connections
that are made during the learning process. The more abstract learning material is the more important
to deliberately practice it.</p>

<p>And that is very true for learning programming languages as the concepts are highly abstract so
to ensure that material is fully grasped, deliberately practising using different approaches and
techniques will make concepts permanent.</p>

<p><blockquote><p>&ldquo;The maximal level of performance for individuals in a given domain is not attained automatically as a function of extended experience, but the level of performance can be increased even by highly experienced individuals as a result of deliberate efforts to improve.&rdquo;</p><footer><strong>Norvig</strong> <cite>Peter <a href="http://norvig.com/21-days.html">http://norvig.com/21-days.html</a> Teach Yourself Programming in 10 Years.</cite></footer></blockquote></p>

<p><strong>Illusions of learning and using testing</strong></p>

<p>Just reading new material and re-reading it again, creates illusion that you must know it already.
It&rsquo;s a familiar problem, multiple times, after reading up on some programming language concept,
I had this feeling that I have fully grasped it. Only to be proven wrong, when actually trying to solve
some problem later and trying to implement the concept, I thought, I understood really well.
This is called illusion of learning.</p>

<p>It seems it&rsquo;s quite easy to find out whether you have actually learned the material or you are
under illusion. Recall and testing will definitely show if that&rsquo;s the case.
After reading up on a concept, or at the end of a &ldquo;pomodoro&rdquo; session, try to recall the main
points of the material without looking into the book or using any other help.</p>

<p>Using flash cards (which use concept of spaced repetition), will help to learn basic concepts of the programming language syntax.
I&rsquo;ve found <a href="http://ankisrs.net/">Anki</a> to be really invaluable for this purpose.</p>

<p>Testing yourself will insure that neural patterns in your brain are stabilized. Mistakes during
self-testing help to correct your thinking and will ensure that you will do better and better every time.</p>

<p><strong>Right mindset and sleep</strong></p>

<p>The importance of sleep is somehow getting lost on us, programmers. It&rsquo;s considered cool
among my fellow software developers to power through an all-nighter session of programming
fueled by caffeine and then show up to work. How effective is that person going to be at
performing their duties, again supported by caffeine?</p>

<p>As research shows, brain creates toxic products when you are awake so when you are asleep
brain cells shrink and toxins are washed out. So in this way, the brain can keep itself healthy.
In addition, during sleep brain seems to perform a bit of housekeeping tasks on the ideas and
concepts you were learning and working with. Less important parts of memories are erased and
the ones you consider important are strengthened.</p>

<p>Studying right before you are going to sleep can substantially enhance your ability to understand
the material, it somehow consolidates your memories into easier to grasp chunks.</p>

<p>I would like to end this post with the importance of keeping the right mindset when learning a new
subject. It&rsquo;s crucial to be positive when approaching difficult to learn material, it&rsquo;s also important
to approach mistakes you make with dispassionate analysis and be proud of your achievements and
aim for success.</p>

<p><strong>References</strong></p>

<ol>
<li><p>Oakley, Barbara. &ldquo;A Mind For Numbers: How to Excel at Math and Science (Even If You Flunked Algebra)&rdquo;. ISBN 039916524X.</p></li>
<li><p>Cirillo, Francesco. &ldquo;The Pomodoro Technique (The Pomodoro)&rdquo;. Effective time-management technique for learning process.</p></li>
<li><p>Norvig, Peter. Teach yourself programming in 10 years. [<a href="http://norvig.com/21-days.html">http://norvig.com/21-days.html</a>]</p></li>
</ol>

]]></content>
  </entry>
  
</feed>
